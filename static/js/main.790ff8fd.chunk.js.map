{"version":3,"sources":["components/GifCard.jsx","components/SearchField.jsx","App.js","reportWebVitals.js","index.js"],"names":["GifCard","props","className","src","url","SearchField","handleInputChange","e","setState","userInput","target","value","handleEnter","key","handleSubmit","state","gifArr","randomGif","rand","bind","handltInputChange","handleTrending","handleRandom","this","axios","get","response2","data","item","response","response1","images","original","type","onChange","onKeyDown","variant","onClick","map","gifInfo","index","console","log","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QASeA,EANC,SAACC,GAAD,OACZ,qBAAKC,UAAY,MAAjB,SACI,qBAAKC,IAAKF,EAAMG,SCCHC,G,8DACjB,WAAYJ,GAAQ,IAAD,8BACf,cAAMA,IASVK,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CACVC,UAAWF,EAAEG,OAAOC,SAZT,EAgBnBC,YAAc,SAACL,GACG,UAAVA,EAAEM,KACF,EAAKC,gBAhBT,EAAKC,MAAQ,CAAEN,UAAW,GAAIO,OAAQ,GAAIC,UAAW,GAAGC,MAAO,GAC/D,EAAKJ,aAAe,EAAKA,aAAaK,KAAlB,gBACpB,EAAKC,kBAAoB,EAAKd,kBAAkBa,KAAvB,gBACzB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBACtB,EAAKG,aAAe,EAAKA,aAAaH,KAAlB,gBANL,E,uDAuBfI,KAAKf,SAAS,CAACU,MAAK,M,8JAInBK,KAAKf,SAAS,CAACU,MAAK,I,SACGM,IAAMC,IAAN,kF,OAAlBC,E,OACNH,KAAKf,SAAS,CACVQ,OAAQU,EAAUC,KAAKA,O,oQAK1BJ,KAAKf,SAAS,CAACU,MAAK,IACjBU,EAAOL,KAAKR,MAAMN,U,SACCe,IAAMC,IAAN,iDAAoDG,EAApD,8C,OAAjBC,E,OACNN,KAAKf,SAAS,CACVQ,OAAQa,EAASF,KAAKA,O,2QAKFH,IAAMC,IAAN,gF,OAAlBK,E,OACNP,KAAKf,SAAS,CACVS,UAAWa,EAAUH,KAAKA,KAAKI,OAAOC,SAAS5B,IAC/Cc,MAAM,I,qIAKV,OACA,gCACJ,sBAAKhB,UAAU,YAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uBAAO+B,KAAO,OAAOtB,MAASY,KAAKR,MAAMN,UAAWyB,SAAUX,KAAKjB,kBAAmB6B,UAAWZ,KAAKX,gBAEtG,mCACA,wBAAQwB,QAAQ,OAAOlC,UAAU,WAAWmC,QAAWd,KAAKT,aAA5D,oBAEA,wBAAQsB,QAAQ,SAASlC,UAAU,aAAamC,QAAWd,KAAKD,aAAhE,oBAEA,wBAAQc,QAAQ,UAAUlC,UAAU,cAAcmC,QAAWd,KAAKF,eAAlE,4BAIA,qBAAKnB,UAAY,UAAjB,UAGyB,IAApBqB,KAAKR,MAAMG,KACZ,8BACCK,KAAKR,MAAMC,OAAOsB,KAAI,SAACC,EAAQC,GAAT,OACnB,cAAC,EAAD,CAASpC,IAAOmC,EAAQR,OAAOC,SAAS5B,KAAYoC,SAIpC,IAApBjB,KAAKR,MAAMG,KACX,8BACI,cAAC,EAAD,CAASd,IAAOmB,KAAKR,MAAME,WAAkB,KAGhDwB,QAAQC,IAAI,a,GAnFYC,cCDpBC,E,uKAEb,OACI,qBAAK1C,UAAU,MAAf,SACI,cAAC,EAAD,U,GAJiByC,aCOlBE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.790ff8fd.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst GifCard = (props) => (\n    <div className = \"gif\">\n        <img src={props.url} />\n    </div>\n)\n\nexport default GifCard","import React,{Component} from 'react'\nimport axios from 'axios'\nimport GifCard from './GifCard'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport default class SearchField extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { userInput: '', gifArr: [] ,randomGif: \"\",rand : false}\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handltInputChange = this.handleInputChange.bind(this)\n        this.handleTrending = this.handleTrending.bind(this)\n        this.handleRandom = this.handleRandom.bind(this)\n        \n    }\n\n    handleInputChange = (e) => {\n        this.setState({\n            userInput: e.target.value\n        });\n    }\n\n    handleEnter = (e) => {\n        if (e.key === \"Enter\") {\n            this.handleSubmit()\n        }\n    }\n\n    flipRand() {\n        this.setState({rand:false})\n    }\n\n    async handleTrending () {\n        {this.setState({rand:false})}\n        const response2 = await axios.get(`http://api.giphy.com/v1/gifs/trending?api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\n        this.setState({\n            gifArr: response2.data.data\n        })\n    }\n\n    async handleSubmit () {\n        {this.setState({rand:false})}\n        var item = this.state.userInput\n        const response = await axios.get(`https://api.giphy.com/v1/gifs/search?q=${item}&api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\n        this.setState({\n            gifArr: response.data.data\n        })\n\n    }\n    async handleRandom () {\n        const response1 = await axios.get(`http://api.giphy.com/v1/gifs/random?api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\n        this.setState({\n            randomGif: response1.data.data.images.original.url,\n            rand: true\n        })\n    }\n\n    render () {\n        return (\n        <div>\n    <div className=\"container\">\n        <div className=\"field\">\n            <input type = \"text\" value = {this.state.userInput} onChange={this.handleInputChange} onKeyDown={this.handleEnter}></input>\n        </div>\n            <center>\n            <button variant=\"Info\" className=\"btn-info\" onClick = {this.handleSubmit} >Search</button>\n\n            <button variant=\"Danger\" className=\"btn-danger\" onClick = {this.handleRandom}>Random</button>\n\n            <button variant=\"Warning\" className=\"btn-warning\" onClick = {this.handleTrending}>Trending</button>\n\n            </center>\n    </div>\n            <div className = \"Allgifs\">\n\n\n                {this.state.rand === false? \n                <div>\n                {this.state.gifArr.map((gifInfo,index) => (\n                    <GifCard url = {gifInfo.images.original.url} key = {index}/>\n                ))}\n                </div>\n                : \n                this.state.rand === true ?\n                <div>\n                    <GifCard url = {this.state.randomGif} key = {0}/>\n                    \n                </div>\n                :console.log(\"\")}\n            </div>\n        </div>\n        )\n    }\n}","import SearchField from './components/SearchField'\nimport React, { Component } from 'react'\n\n\n\nexport default class App extends Component {\n    render () {\n        return (\n            <div className=\"App\">\n                <SearchField/>\n            </div>\n        )\n    }\n}\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}