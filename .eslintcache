[{"C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\index.js":"1","C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\reportWebVitals.js":"2","C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\App.js":"3","C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\components\\GifCard.jsx":"4","C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\components\\SearchField.jsx":"5"},{"size":517,"mtime":1610653834178,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1610653834178,"results":"8","hashOfConfig":"7"},{"size":358,"mtime":1610894976902,"results":"9","hashOfConfig":"7"},{"size":162,"mtime":1610900026142,"results":"10","hashOfConfig":"7"},{"size":3064,"mtime":1610905279723,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9kk21",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"14"},"C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\index.js",[],["27","28"],"C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\reportWebVitals.js",[],"C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\App.js",["29"],"import './App.css';\r\nimport SearchField from './components/SearchField'\r\nimport React, { Component } from 'react'\r\nimport GifCard from './components/GifCard'\r\n\r\n\r\nexport default class App extends Component {\r\n    render () {\r\n        return (\r\n            <div className=\"App\">\r\n                <SearchField/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n","C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\components\\GifCard.jsx",["30"],"import React from 'react'\r\n\r\n\r\nconst GifCard = (props) => (\r\n    <div className = \"gif\">\r\n        <img src={props.url} />\r\n    </div>\r\n)\r\n\r\nexport default GifCard",["31","32"],"C:\\Users\\dkama\\OneDrive\\Documents\\GitHub\\Assignment_0\\giphy\\src\\components\\SearchField.jsx",["33","34"],"import React,{Component} from 'react'\r\nimport axios from 'axios'\r\nimport GifCard from './GifCard'\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default class SearchField extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { userInput: '', gifArr: [] ,randomGif: \"\",rand : false}\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handltInputChange = this.handleInputChange.bind(this)\r\n        this.handleTrending = this.handleTrending.bind(this)\r\n        this.handleRandom = this.handleRandom.bind(this)\r\n        \r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({\r\n            userInput: e.target.value\r\n        });\r\n    }\r\n\r\n    handleEnter = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            this.handleSubmit()\r\n        }\r\n    }\r\n\r\n    flipRand() {\r\n        this.setState({rand:false})\r\n    }\r\n\r\n    async handleTrending () {\r\n        {this.setState({rand:false})}\r\n        const response2 = await axios.get(`http://api.giphy.com/v1/gifs/trending?api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\r\n        this.setState({\r\n            gifArr: response2.data.data\r\n        })\r\n    }\r\n\r\n    async handleSubmit () {\r\n        {this.setState({rand:false})}\r\n        var item = this.state.userInput\r\n        const response = await axios.get(`https://api.giphy.com/v1/gifs/search?q=${item}&api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\r\n        this.setState({\r\n            gifArr: response.data.data\r\n        })\r\n\r\n    }\r\n    async handleRandom () {\r\n        const response1 = await axios.get(`http://api.giphy.com/v1/gifs/random?api_key=j0qiwJ6UPIMDYIYMKbLE6reZQtdHTDys`)\r\n        this.setState({\r\n            randomGif: response1.data.data.images.original.url,\r\n            rand: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        return (\r\n        <div>\r\n    <div className=\"container\">\r\n        <div className=\"field\">\r\n            <input type = \"text\" value = {this.state.userInput} onChange={this.handleInputChange} onKeyDown={this.handleEnter}></input>\r\n        </div>\r\n            <center>\r\n            <button variant=\"Info\" className=\"btn-info\" onClick = {this.handleSubmit} >Search</button>\r\n\r\n            <button variant=\"Danger\" className=\"btn-danger\" onClick = {this.handleRandom}>Random</button>\r\n\r\n            <button variant=\"Warning\" className=\"btn-warning\" onClick = {this.handleTrending}>Trending</button>\r\n\r\n            </center>\r\n    </div>\r\n            <div className = \"Allgifs\">\r\n\r\n\r\n                {this.state.rand === false? \r\n                <div>\r\n                {this.state.gifArr.map((gifInfo,index) => (\r\n                    <GifCard url = {gifInfo.images.original.url} key = {index}/>\r\n                ))}\r\n                </div>\r\n                : \r\n                this.state.rand === true ?\r\n                <div>\r\n                    <GifCard url = {this.state.randomGif} key = {0}/>\r\n                    \r\n                </div>\r\n                :console.log(\"\")}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}",{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":4,"column":8,"nodeType":"41","messageId":"42","endLine":4,"endColumn":15},{"ruleId":"43","severity":1,"message":"44","line":6,"column":9,"nodeType":"45","endLine":6,"endColumn":32},{"ruleId":"35","replacedBy":"46"},{"ruleId":"37","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":35,"column":9,"nodeType":"50","messageId":"51","endLine":35,"endColumn":38},{"ruleId":"48","severity":1,"message":"49","line":43,"column":9,"nodeType":"50","messageId":"51","endLine":43,"endColumn":38},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'GifCard' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["52"],["53"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]